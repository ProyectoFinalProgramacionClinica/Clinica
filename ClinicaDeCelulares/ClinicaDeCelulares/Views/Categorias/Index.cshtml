@model IEnumerable<ClinicaDeCelulares.Models.Categorias>

@{
    ViewData["Title"] = "Index";
}

<h2>Categorias</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>
<div id="seccion-imprimir">
    <table id="table" class="display" style="width:100%">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.NombreCategoria)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Descripcion)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td class="edit" id="@item.IdCategoria" data-propertyName="Nombre de Categoria">
                        @Html.DisplayFor(modelItem => item.NombreCategoria)
                    </td>
                    <td class="edit" id="@item.IdCategoria" data-propertyName="Descripcion">
                        @Html.DisplayFor(modelItem => item.Descripcion)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.IdCategoria">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.IdCategoria">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.IdCategoria">Delete</a>
                    </td>
                </tr>
            }
        </tbody>

    </table>
</div>

<input type="button" value="imprimir" class="btn btn-warning" id="report"/>
@section scripts{
    <script>
            $(document).ready(function () {
                $('#table').DataTable();
                 $(".edit").editable("Categorias/EditField", {
                submitdata: function () {
                    return {
                        id: $(this).data("id"),
                        field: $(this).data("propertyname"),
                        value: $(this).value
                    }
                }, //Función para poder recibir el nuevo valor y mostrarlo 
                callback: function (value, settings) {
                    var jsonData = $.parseJSON(value);
                    if (jsonData.status) {
                        $(this).text(jsonData.value);
                    } else { $(this).text(jsonData.mensaje); }
                }
                 });
                $('#report').click(function ()
                {
                    var mywindow = window.open('', 'PRINT', 'height=400,width=600');
                    mywindow.document.write('<html><head>'); 
                    mywindow.document.write('<style>.tabla{width:100%;border-collapse:collapse;margin:16px 0 16px 0;}.tabla th{border:1px solid #ddd;padding:4px;background-color:#d4eefd;text-align:left;font-size:15px;}.tabla td{border:1px solid #ddd;text-align:left;padding:6px;}</style>');
                    mywindow.document.write('</head><body >');
                    mywindow.document.write(document.getElementById('seccion-imprimir').innerHTML);
                    mywindow.document.write('</body></html>');
                    mywindow.document.close(); // necesario para IE >= 10 
                    mywindow.focus(); // necesario para IE >= 10 
                    mywindow.print(); mywindow.close(); return true;
                });
                $('#export-excel').click(function () { $('#table').table2excel(); }
);
            });
    </script>
}
